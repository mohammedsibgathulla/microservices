WEBVTT

00:02.000 --> 00:08.800
Welcome back in the previous step we configure the limits service to connect to this spring cloud config server.

00:08.810 --> 00:14.330
We created something called Bootstrap dot properties instead of application dot properties to configure

00:14.330 --> 00:19.600
the URI of the spring cloud config server and get the limits service connected to it.

00:19.670 --> 00:24.230
And we saw that by default limits service uses the default profile.

00:24.320 --> 00:31.270
So let's now configure a dev profile and QA profile then see what values are picked up from the spring cloud config

00:31.340 --> 00:37.070
server the important thing for you to understand is the fact that right now all the configuration for the

00:37.070 --> 00:42.250
limits service is coming from where it's coming from the GIT repository.

00:42.340 --> 00:45.910
We are not really contributing anything in the limits service.

00:45.950 --> 00:51.570
The only thing which we are configuring the limits service is what is the URI of this spring cloud

00:51.630 --> 00:57.980
config server that's the only thing other than that all the other configuration for limits service is being configured.

00:57.980 --> 00:59.910
In the GIT repository.

01:00.070 --> 01:06.370
The advantage of configuring stuff in the GIT depositary is now the entire configuration of limits.

01:06.390 --> 01:11.340
Service is separated from the deployment of the limits service.

01:11.420 --> 01:17.220
You don't really need to worry about what configuration that needs to be used when deploying it.

01:17.300 --> 01:21.700
It would automatically pick it up from the GIT repository.

01:22.000 --> 01:23.520
OK enough theory.

01:23.540 --> 01:28.330
Let's get back to the practical stuff and configure a few profiles for the limit service.

01:28.530 --> 01:35.660
I'm opening up the bootstrap dot properties inside the limits service and over here by default we are using

01:35.660 --> 01:39.400
the default profile I would want to use specific profile.

01:39.410 --> 01:40.570
How do I do that.

01:40.640 --> 01:49.920
The way we can do is by saying spring dot profiles dot active is equal to whichever profile you want

01:49.920 --> 01:50.250
to use.

01:50.260 --> 01:53.450
So let's say I want to use the dev profiles starting off.

01:53.460 --> 01:54.880
So I would want to dev.

01:54.960 --> 01:56.600
So 1 and 1 1 1.

01:56.610 --> 01:58.730
Those are the values I would want to use.

01:58.740 --> 02:04.790
So in your dev environment all that you need to do is set the spring profiles active is equal

02:04.800 --> 02:05.610
to dev.

02:05.790 --> 02:10.600
In this example we are actually using bootstrap dot properties to set the active profile.

02:10.810 --> 02:15.030
But actually you can configure this in N number of ways.

02:15.030 --> 02:23.100
One of the ways you can pass in the active profile is through things like VM arguments or the java application

02:23.160 --> 02:25.340
arguments and things like that.

02:25.340 --> 02:32.100
Now let's wait for the application to pick this change up when I run the limits right now you would see that the values

02:32.100 --> 02:35.630
that are being picked up are 1 1 1 and 1.

02:35.760 --> 02:42.000
If you look at the configuration of the dev that's the values we have configured so 1 and 1 1

02:42.000 --> 02:42.740
1.

02:43.050 --> 02:49.290
I don't want to override the value for maximum I would only want to override the value for minimum in the dev the

02:49.290 --> 02:54.640
maximum I would want to pick up from the default which is present in here.

02:55.920 --> 03:01.610
Well the change we picked up immediately when I refresh the URL you would see that there is no change.

03:01.620 --> 03:05.520
Why think about it why am I not getting the latest values.

03:05.550 --> 03:10.340
The reason is because I'm not really committed it down to the GIT repository.

03:10.350 --> 03:17.380
Only the changes that are committed to the local GIT repository are available through the config server.

03:17.400 --> 03:20.940
Let's go ahead and commit them in you can say GIT add star.

03:21.420 --> 03:28.180
And now say GIT status you would see that I've modified one property file that's cool that's the one which I wanted to

03:28.200 --> 03:38.990
commit in so GIT commit hyphen m and I would want to put in the comment saying removed configuration for maximum.

03:39.140 --> 03:40.550
OK that's done.

03:40.650 --> 03:45.080
And now I refresh it and still I don't pick up the new value.

03:45.100 --> 03:46.100
Why is it so.

03:46.180 --> 03:50.900
The thing is we are connecting the limits service to the spring cloud config server.

03:51.220 --> 03:54.570
What happens is at the application start up at the start up of

03:54.570 --> 04:01.500
limits service is when it picks up the values from the spring cloud config server.

04:01.550 --> 04:05.220
Let's restart the application to pick the changes up.

04:05.260 --> 04:10.570
I'm stopping the limits service starting it again at later point in time.

04:10.630 --> 04:15.220
We would see that there is something called the refresh URL which we can make use of to refresh

04:15.220 --> 04:18.740
the configuration from a spring cloud config server.

04:18.850 --> 04:22.850
But for now let's just restart the application and execute the URI again.

04:22.960 --> 04:28.300
Now you can see that the maximum is coming with the default value what is the default value that we

04:28.300 --> 04:28.730
have.

04:28.740 --> 04:31.540
It's in the limits service dot properties it's 8 8 8 .

04:31.550 --> 04:33.400
However the minimum value.

04:33.460 --> 04:35.240
We are overriding it.

04:35.260 --> 04:38.770
We are getting the value from the dev profile in the bootstrap.

04:38.770 --> 04:43.630
We configured dev profile and we are picking up the values from the dev profile.

04:43.630 --> 04:46.460
Now let's see what would happen when I change the profile.

04:46.570 --> 04:52.680
I would want to change the profile to QA the application would start picking up the changes you can see that it's

04:52.690 --> 04:55.050
picking up the changes and refreshing it.

04:55.280 --> 04:59.170
And now I can go ahead and execute the limits.

04:59.510 --> 05:05.060
And now you can see that the QA values are being picked up so the maximum 2 2 2 minimum 2.

05:05.080 --> 05:10.460
These are all the values which are coming from the Q A environment configuration.

05:10.750 --> 05:17.260
In the earliest step we configured different environment properties different environment configuration

05:17.440 --> 05:19.460
for the limits service in GIT.

05:19.540 --> 05:26.620
We did that by creating configuration limits servies QA limits service DEV dot properties and things like

05:26.620 --> 05:27.080
that.

05:27.120 --> 05:35.200
The the GIT repository in this step we looked at how I can configure profiles on the limits service to be able to

05:35.260 --> 05:39.580
pick up that specific configuration from the spring cloud config server.

05:39.690 --> 05:41.290
Until the next step bye bye.
